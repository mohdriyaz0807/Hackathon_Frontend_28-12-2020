[{"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\index.js":"1","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\App.js":"3","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\ResetPassword.js":"4","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\login.js":"5","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\Register.js":"6","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\ForgotPassword.js":"7","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Dashboard.js":"8","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Header\\Header.js":"9","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Home\\Home.js":"10","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Footer\\Footer.js":"11","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\AdminDashboard\\OrderPanel.js":"12","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Error-404\\404.js":"13","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Admin\\Admin.js":"14","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\MakeOrder.js":"15","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\YourOrders.js":"16","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\logout.js":"17","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\PizzaBase.js":"18","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\Sauce.js":"19","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\Veggies.js":"20","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\Meat.js":"21","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\Cheese.js":"22"},{"size":500,"mtime":1609212865748,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":1934,"mtime":1612776145615,"results":"26","hashOfConfig":"24"},{"size":2285,"mtime":1611849879808,"results":"27","hashOfConfig":"24"},{"size":3331,"mtime":1613029011633,"results":"28","hashOfConfig":"24"},{"size":3291,"mtime":1612809186524,"results":"29","hashOfConfig":"24"},{"size":1874,"mtime":1611849868660,"results":"30","hashOfConfig":"24"},{"size":2685,"mtime":1613027869113,"results":"31","hashOfConfig":"24"},{"size":1373,"mtime":1612633115522,"results":"32","hashOfConfig":"24"},{"size":857,"mtime":1612606464647,"results":"33","hashOfConfig":"24"},{"size":575,"mtime":1611895110345,"results":"34","hashOfConfig":"24"},{"size":2288,"mtime":1612809292864,"results":"35","hashOfConfig":"24"},{"size":1169,"mtime":1612775995384,"results":"36","hashOfConfig":"24"},{"size":2946,"mtime":1612783287606,"results":"37","hashOfConfig":"24"},{"size":5706,"mtime":1613028409095,"results":"38","hashOfConfig":"24"},{"size":4184,"mtime":1613033560215,"results":"39","hashOfConfig":"24"},{"size":428,"mtime":1612632801669,"results":"40","hashOfConfig":"24"},{"size":1327,"mtime":1613024089862,"results":"41","hashOfConfig":"24"},{"size":1274,"mtime":1613024083392,"results":"42","hashOfConfig":"24"},{"size":2147,"mtime":1613025593609,"results":"43","hashOfConfig":"24"},{"size":2159,"mtime":1613025575911,"results":"44","hashOfConfig":"24"},{"size":1278,"mtime":1613024103927,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"4ytb6s",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\index.js",[],["99","100"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\App.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\ResetPassword.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\login.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\Register.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\ForgotPassword.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Header\\Header.js",["101"],"import React from 'react';\r\nimport './Style.css'\r\nimport {Grid,ListItem,ListItemIcon } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Logout from '../User/logout'\r\n\r\nfunction Header(){\r\n    return( \r\n        <Grid container className=\"Head\">\r\n            <Grid item xs={12} sm={6} md={6} className=\"Title\">\r\n              Pizza Corner\r\n            </Grid>\r\n            <Grid item xs={4} sm={2} md={2}>\r\n              <ListItem>\r\n              <ListItemIcon><Link to=\"/\" ><HomeIcon fontSize=\"large\" color=\"primary\"/>\r\n                <span className=\"Link\">Home</span></Link></ListItemIcon>\r\n              </ListItem>\r\n            </Grid>\r\n            <Grid item xs={4} sm={2} md={2}>\r\n            <ListItem>\r\n              <ListItemIcon><Link to=\"/admin\" ><SupervisorAccountIcon fontSize=\"large\" color=\"primary\"/>\r\n                <span className=\"Link\">Admin</span></Link></ListItemIcon>\r\n              </ListItem>\r\n            </Grid>\r\n            <Grid item xs={4} sm={2} md={2}>\r\n            <ListItem>\r\n              {localStorage.getItem('token') ? <Logout/> : '' }\r\n              </ListItem>\r\n            </Grid>\r\n        </Grid>\r\n      )\r\n}\r\nexport default Header","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Home\\Home.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\AdminDashboard\\OrderPanel.js",["102"],"import React,{useEffect,useState} from 'react'\r\nimport { makeStyles,Grid,Paper,Button  } from '@material-ui/core'\r\nimport  Alert from '@material-ui/lab/Alert';\r\nimport axios from 'axios'\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    flexGrow: 1,\r\n    marginBottom:'20%'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  }));\r\nconst logoff = ()=>{\r\n  localStorage.removeItem('admintoken')\r\n  window.location.href='./admin'\r\n}\r\nconst OrderPanel = () => { \r\nconst [order,setorder]=useState([])\r\n    const show = async ()=>{\r\n        let url='https://pizza-apps-backend.herokuapp.com'\r\n        const res= await axios.get(`${url}/orderpanel`,\r\n        {headers:{'authorization':localStorage.getItem('admintoken')\r\n      }})\r\n        console.log(res.data)\r\n        setorder(res.data)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      show()\r\n  },[])\r\n\r\n    const classes = useStyles();\r\n\r\n    if(order!==''){\r\n    return (\r\n      <div className={classes.root}>\r\n        <Button variant=\"contained\" color='primary' onClick={logoff}>LogOut</Button>\r\n        {order.map((row) => (\r\n          <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\" spacing={3} key={row.name}>\r\n                      <Grid item xs={12} sm={8} md={6}>\r\n                    <Paper className={classes.paper}>\r\n                  <h2 className={classes.h2}>{row.name}</h2>\r\n                  <p>{row.base}</p>\r\n                  <p>{row.sauce}</p>\r\n                  <p>{row.cheese}</p>\r\n                  <p>{row.veggies.join(', ')}</p>\r\n                  <p>{row.meat.join(', ')}</p>\r\n                <h2 className={classes.h2}>RS: {eval((row.veggies.length*25)+(row.meat.length*25)+150)}</h2>\r\n                <h3>{row.status}</h3>\r\n                </Paper>\r\n                </Grid>\r\n                </Grid>\r\n                ))}\r\n                <br/>\r\n            </div>\r\n    )\r\n    }else{\r\n        return (\r\n            <div className={classes.root}>\r\n                    <Button variant=\"contained\" color='primary' onClick={logoff}>LogOut</Button>\r\n            <Alert severity=\"info\">No orders found</Alert>\r\n          </div>\r\n        )\r\n          }\r\n}\r\n\r\nexport default OrderPanel\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Error-404\\404.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Admin\\Admin.js",["103"],"import './AdminStyle.css'\r\nimport React,{useState} from 'react';\r\nimport { Paper , Grid ,FormControl,FormHelperText,Input,InputLabel,Button,makeStyles  } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    flexGrow: 1,\r\n    marginBottom:'15%',\r\n  },\r\n  firstline:{\r\n    textAlign:'center',\r\n      fontSize:'150%',\r\n      fontFamily:'serif',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Admin =() =>{\r\n    let url='https://pizza-apps-backend.herokuapp.com'\r\n    const [data,setData]=useState({email:\"\",password:\"\"})\r\n    const [loading,setloading]=useState({show:'Login',disabled:false})\r\n    const submit = async ()=>{\r\n      setloading({show:'Plese Wait..',disabled:true})\r\n    const res= await axios.post(`${url}/adminlogin`,data)\r\n    console.log(res.data)\r\n    localStorage.setItem('admintoken', res.data.token)\r\n    setloading({show:'Login',disabled:false})\r\n    window.location.href='/Orderpanel'\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n          <Grid container spacing={2}>\r\n            <Grid item sm={2} xs={12} md={4}></Grid>\r\n          <Grid item sm={8} xs={12} md={4}>\r\n          <Paper className={classes.paper}>\r\n          <h1 className={classes.firstline}>Admin Login</h1>\r\n            <FormControl >\r\n            <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n            <Input type='email' id=\"my-input\" aria-describedby=\"my-helper-text\" onChange={e=>setData({...data,email:e.target.value})} value={data.email}/>\r\n            </FormControl><br/>\r\n            <FormControl>\r\n            <InputLabel htmlFor=\"my-input1\">Password</InputLabel>\r\n            <Input type='password' id=\"my-input1\" aria-describedby=\"my-helper-text1\" onChange={e=>setData({...data,password:e.target.value})} value={data.password}/>\r\n            <FormHelperText id=\"my-helper-text1\">Keep your Password safe !</FormHelperText>\r\n            </FormControl><br/><br/>\r\n            <FormControl>\r\n            <Button variant=\"contained\" color=\"secondary\" disabled={loading.disabled} onClick={submit}>{loading.show}</Button>\r\n            </FormControl><br/><br/>\r\n            <h4>For Login Purpose use below credentials</h4>\r\n            <p>Email : admin@pizzacorner.com</p>\r\n            <p>Password : 1234</p>\r\n            </Paper>\r\n            </Grid>\r\n            </Grid>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst Strings=()=>{\r\n  \r\n    let url='https://pizza-apps-backend.herokuapp.com'\r\n    const href = window.location.href.split('/')\r\n    const requiredstring = href[href.length-1]\r\n    const show=async()=>{\r\n    const res = await axios.get(`${url}/adminconfirm/${requiredstring}`)\r\n    console.log(res.data)\r\n    }\r\n    show()\r\n}\r\n\r\nexport  {Admin,Strings,}","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\MakeOrder.js",["104","105","106","107"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\YourOrders.js",["108","109","110","111","112","113"],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\User\\logout.js",[],"C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\PizzaBase.js",["114"],"import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n  const PizzaBase=(props)=> {\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n    props.getName(value,\"base\")\r\n    }, [value])\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\"><h2>Pizza Base</h2></FormLabel>\r\n      <RadioGroup aria-label=\"pizzaBase\" name=\"pizzaBase1\" value={value} onChange={handleChange}>\r\n        <FormControlLabel value=\"NY Style Pizza\" control={<Radio />} label=\"NY Style Pizza\" />\r\n        <FormControlLabel value=\"Neapolitan Crust\" control={<Radio />} label=\"Neapolitan Crust\" />\r\n        <FormControlLabel value=\"Chicago Deep Dish\" control={<Radio />} label=\"Chicago Deep Dish\" />\r\n        <FormControlLabel value=\"Sicilian Style\" control={<Radio />} label=\"Sicilian Style\" />\r\n        <FormControlLabel value=\"Thin Crust\" control={<Radio />} label=\"Thin Crust\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\nexport default PizzaBase\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\Sauce.js",["115"],"import React,{useState,useEffect} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst Sauce=(props)=> {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    props.getName(value,\"sauce\")\r\n    }, [value])\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\"><h2>Sauce</h2></FormLabel>\r\n      <RadioGroup aria-label=\"Sauce\" name=\"Sauce1\" value={value} onChange={handleChange}>\r\n        <FormControlLabel value=\"Pesto\" control={<Radio />} label=\"Pesto\" />\r\n        <FormControlLabel value=\"Hummus\" control={<Radio />} label=\"Hummus\" />\r\n        <FormControlLabel value=\"Buffalo Sauce\" control={<Radio />} label=\"Buffalo Sauce\" />\r\n        <FormControlLabel value=\"Marinara Sauce\" control={<Radio />} label=\"Marinara Sauce\" />\r\n        <FormControlLabel value=\"Garlic Ranch\" control={<Radio />} label=\"Garlic Ranch\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\nexport default Sauce\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\Veggies.js",["116"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Veggies(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({list : [{value:' Spinach' ,isChecked:false },{value:'Mushrooms' ,isChecked:false },{value:'Onions' ,isChecked:false },{value:'Fresh_tomatoes' ,isChecked:false },{value:'Zucchini' ,isChecked:false },{value:'Artichoke_hearts' ,isChecked:false },{value:'Garlic' ,isChecked:false }]});\r\n  const [veglist,setveglist]=useState([])\r\n  const handleChange = (event) => {\r\n    state.list.forEach(element=>{\r\n      if(element.value===event.target.name){\r\n        element.isChecked = event.target.checked\r\n        if(element.isChecked){\r\n          setveglist(veglist=>[...veglist,(element.value)])\r\n        }else{\r\n          veglist.splice(veglist.indexOf(element.value),1)\r\n        }\r\n    }\r\n  })\r\n  setState({list:state.list})\r\n  };\r\n\r\n  useEffect(() => {\r\n      props.getName(veglist,\"veggies\")\r\n  }, [veglist])\r\n\r\n  const mapped = state.list.map((val ) => \r\n  <FormControlLabel\r\n  key={val.value}\r\n  control={<Checkbox checked={val.isChecked} onChange={handleChange} name = {val.value}  />}\r\n  label = {val.value}\r\n  />)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl required error component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\"><h2>You can Choose any 3 Veggies for Free</h2></FormLabel>\r\n        <FormGroup >{mapped}</FormGroup>\r\n        <FormHelperText><h3>More than 3 Veggie Costs as per pricing...</h3></FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\Meat.js",["117"],"import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Meat(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({list : [{value:' Pepperoni' ,isChecked:false },{value:'Hot Soppressata' ,isChecked:false },{value:'Sausage' ,isChecked:false },{value:'Bacon' ,isChecked:false },{value:'Prosciutto' ,isChecked:false },{value:'Meatballs' ,isChecked:false },{value:'Buffalo Chicken' ,isChecked:false }]});\r\n  const [meatlist,setmeatlist]=useState([])\r\n  const handleChange = (event) => {\r\n    state.list.forEach(element=>{\r\n      if(element.value===event.target.name){\r\n        element.isChecked = event.target.checked\r\n        if(element.isChecked){\r\n          setmeatlist(meatlist=>[...meatlist,(element.value)])\r\n        }else{\r\n          meatlist.splice(meatlist.indexOf(element.value),1)\r\n        }\r\n    }\r\n  })\r\n  setState({list:state.list})\r\n};\r\nuseEffect(() => {\r\n    props.getName(meatlist,\"meat\")\r\n  }, [meatlist])\r\n\r\n  const mapped = state.list.map((e ) => \r\n      <FormControlLabel\r\n        key={e.value}\r\n        control={<Checkbox checked={e.isChecked} onChange={handleChange} name = {e.value} />}\r\n        label = {e.value}\r\n      />\r\n    )\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl required error component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\"><h2>You can Choose any 1 Meat for Free</h2></FormLabel>\r\n        <FormGroup>{mapped}</FormGroup>\r\n        <FormHelperText><h3>More than 1 Meat Costs as per pricing...</h3></FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\RIYAZ\\Documents\\guvi_tasks\\hackathon.28-12-2020\\pizza-frontend\\src\\components\\Dashboard\\Ingredients\\Cheese.js",["118"],"import React,{useState,useEffect} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst Cheese=(props)=> {\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    props.getName(value,\"cheese\")\r\n    }, [value])\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\"><h2>Cheese</h2></FormLabel>\r\n      <RadioGroup aria-label=\"Cheese\" name=\"Cheese1\" value={value} onChange={handleChange}>\r\n        <FormControlLabel value=\"Mozzarella\" control={<Radio />} label=\"Mozzarella\" />\r\n        <FormControlLabel value=\"Gorgonzola\" control={<Radio />} label=\"Gorgonzola\" />\r\n        <FormControlLabel value=\"Pecorino-Romano\" control={<Radio />} label=\"Pecorino-Romano\" />\r\n        <FormControlLabel value=\"Havarti\" control={<Radio />} label=\"Havarti\" />\r\n        <FormControlLabel value=\"Cheddar\" control={<Radio />} label=\"Cheddar\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\nexport default Cheese\r\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":54,"column":49,"nodeType":"129","messageId":"130","endLine":54,"endColumn":53},{"ruleId":"123","severity":1,"message":"131","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"132","line":1,"column":24,"nodeType":"125","messageId":"126","endLine":1,"endColumn":33},{"ruleId":"133","severity":1,"message":"134","line":67,"column":13,"nodeType":"135","messageId":"130","endLine":67,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":72,"column":7,"nodeType":"138","messageId":"139","endLine":72,"endColumn":65},{"ruleId":"136","severity":1,"message":"137","line":76,"column":7,"nodeType":"138","messageId":"139","endLine":76,"endColumn":56},{"ruleId":"123","severity":1,"message":"131","line":3,"column":38,"nodeType":"125","messageId":"126","endLine":3,"endColumn":42},{"ruleId":"140","severity":1,"message":"141","line":55,"column":5,"nodeType":"142","endLine":55,"endColumn":12,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"137","line":59,"column":5,"nodeType":"138","messageId":"139","endLine":59,"endColumn":50},{"ruleId":"133","severity":1,"message":"134","line":59,"column":11,"nodeType":"135","messageId":"130","endLine":59,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":96,"column":18,"nodeType":"135","messageId":"130","endLine":96,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":116,"column":51,"nodeType":"129","messageId":"130","endLine":116,"endColumn":55},{"ruleId":"140","severity":1,"message":"144","line":16,"column":8,"nodeType":"142","endLine":16,"endColumn":15,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"146","line":16,"column":8,"nodeType":"142","endLine":16,"endColumn":15,"suggestions":"147"},{"ruleId":"140","severity":1,"message":"146","line":39,"column":6,"nodeType":"142","endLine":39,"endColumn":15,"suggestions":"148"},{"ruleId":"140","severity":1,"message":"146","line":38,"column":6,"nodeType":"142","endLine":38,"endColumn":16,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"146","line":16,"column":8,"nodeType":"142","endLine":16,"endColumn":15,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'FaceIcon' is defined but never used.","Identifier","unusedVar","no-eval","eval can be harmful.","CallExpression","unexpected","'Link' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'submit'. Either include it or remove the dependency array.","ArrayExpression",["153"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["154"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["155"],["156"],["157"],["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"161","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"161","fix":"168"},"Update the dependencies array to be: [alert, submit]",{"range":"169","text":"170"},"Update the dependencies array to be: [props, value]",{"range":"171","text":"172"},{"range":"173","text":"172"},"Update the dependencies array to be: [props, veglist]",{"range":"174","text":"175"},"Update the dependencies array to be: [meatlist, props]",{"range":"176","text":"177"},{"range":"178","text":"172"},[1335,1342],"[alert, submit]",[539,546],"[props, value]",[543,550],[1507,1516],"[props, veglist]",[1505,1515],"[meatlist, props]",[545,552]]